// @version=4
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Bunghole 2021
strategy(title="MACD Long Strategy", initial_capital = 100000, default_qty_type = strategy.percent_of_equity, default_qty_value = 100, pyramiding = 0, currency = 'USD', overlay=true)


//// Stoploss and Take Profit Parameters
// Enable Long Strategy
enable_long_strategy = input(true, title="Enable Long Strategy", group="SL/TP For Long Strategy",inline="1")
long_stoploss_value = input(defval=50, title='Stoploss %', type=input.float, minval=0.1, group="SL/TP For Long Strategy",inline="2")
long_stoploss_percentage = (close * (long_stoploss_value / 100)) / syminfo.mintick
long_takeprofit_value = input(defval=50, title='Take Profit %', type=input.float, minval=0.1, group="SL/TP For Long Strategy",inline="2")
long_takeprofit_percentage = (close * (long_takeprofit_value / 100)) / syminfo.mintick

// Enable Short Strategy
enable_short_strategy = input(true, title="Enable Short Strategy", group="SL/TP For Short Strategy",inline="3")
short_stoploss_value = input(defval=50, title='Stoploss %', type=input.float, minval=0.1, group= "SL/TP For Short Strategy",inline="4")
short_stoploss_percentage = (close * (short_stoploss_value / 100)) / syminfo.mintick
short_takeprofit_value = input(defval=50, title='Take Profit %', type=input.float, minval=0.1, group="SL/TP For Short Strategy",inline="4")
short_takeprofit_percentage = (close * (short_takeprofit_value / 100)) / syminfo.mintick

// Plot Stoploss & Take Profit Levels
long_stoploss_price = strategy.position_avg_price * (1 - long_stoploss_value/100)
long_takeprofit_price = strategy.position_avg_price * (1 + long_takeprofit_value/100)
short_stoploss_price = strategy.position_avg_price * (1 + short_stoploss_value/100)
short_takeprofit_price = strategy.position_avg_price * (1 - short_takeprofit_value/100)
plot(enable_long_strategy and not enable_short_strategy ? long_stoploss_price: na, color=#ff0000, style=plot.style_linebr, linewidth=2, title="Long SL Level")
plot(enable_long_strategy and not enable_short_strategy ? long_takeprofit_price: na, color=#008000, style=plot.style_linebr, linewidth=2, title="Long TP Level")
plot(enable_short_strategy and not enable_long_strategy ? short_stoploss_price: na, color=#ff0000, style=plot.style_linebr, linewidth=2, title="Short SL Level")
plot(enable_short_strategy and not enable_long_strategy ? short_takeprofit_price: na, color=#008000, style=plot.style_linebr, linewidth=2, title="Short TP Level")

// Date Range
start_date = input(title="Start Date", type=input.integer, defval=1, minval=1, maxval=31, group="Date Range")
start_month = input(title="Start Month", type=input.integer, defval=1, minval=1, maxval=12, group="Date Range")
start_year = input(title="Start Year", type=input.integer, defval=1804, minval=1800, maxval=3000, group="Date Range")
end_date = input(title="End Date", type=input.integer, defval=1, minval=1, maxval=3, group="Date Range")
end_month = input(title="End Month", type=input.integer, defval=1, minval=1, maxval=12, group="Date Range")
end_year = input(title="End Year", type=input.integer, defval=2077, minval=1800, maxval=3000, group="Date Range")
in_date_range = (time >= timestamp(syminfo.timezone, start_year, start_month, start_date, 0, 0)) and (time < timestamp(syminfo.timezone, end_year, end_month, end_date, 0, 0))


//// Indicator Inputs
// RSI
rsi_over_sold = input(defval=30, minval=1, title="Over Sold Level", group="RSI")
rsi_over_bought = input(defval=70, minval=1, title="Over Bought Level", group="RSI")
rsi_length = input(defval=14, minval=1, title="RSI Length", group="RSI")
rsi = rsi(close, rsi_length)

// MACD
fast_ma = input(defval=12, minval=1, title="FastMA Length", type=input.integer, group="MACD")
slow_ma = input(defval=26, minval=1, title="SlowMA Length", type=input.integer, group="MACD")
signal_length = input(defval=9, minval=1, title="Signal Length", type=input.integer, group="MACD")
[macd_line, signal_line, hist_line] = macd(close, fast_ma, slow_ma, signal_length)

// EMA
a = input(false, title="Enable EMA Length", group="EMA", inline="1")
b = input(false, title="Enable EMA Length", group="EMA", inline="2")
c = input(false, title="Enable EMA Length", group="EMA", inline="3")
d = input(false, title="Enable EMA Length", group="EMA", inline="4")
e = input(false, title="Enable EMA Length", group="EMA", inline="5")
lena = input(9, minval=1, title="-", group="EMA", inline="1")
lenb = input(21, minval=1, title="-", group="EMA", inline="2")
lenc = input(50, minval=1, title="-", group="EMA", inline="3")
lend = input(100, minval=1, title="-", group="EMA", inline="4")
lene = input(200, minval=1, title="-", group="EMA", inline="5")
outa = ema(close, lena)
outb = ema(close, lenb)
outc = ema(close, lenc)
outd = ema(close, lend)
oute = ema(close, lene)

//EMA Plots
plot(a and outa ? outa: na, title="EMA 1", color=color.yellow)
plot(b and outb ? outb: na, title="EMA 2", color=color.teal)
plot(c and outc ? outc: na, title="EMA 3", color=color.orange)
plot(d and outd ? outd: na, title="EMA 4", color=color.green, linewidth=2)
plot(e and oute ? oute: na, title="EMA 5", color=color.blue, linewidth=2)


//// Strategy
// Creating Long and Short Strategy
was_over_sold =  barssince(rsi <= rsi_over_sold) <= 10
was_over_bought = barssince(rsi >= rsi_over_bought) <= 10
crossover_bull = crossover(macd_line, signal_line)
crossover_bear = crossunder(macd_line, signal_line)
buy_signal = was_over_sold and crossover_bull
sell_signal = was_over_bought and crossover_bear

// Long Strategy
if buy_signal and in_date_range and enable_long_strategy == true
    strategy.entry("Long", true, when=buy_signal, alert_message="Open Long Position")
    strategy.exit("Long  SL/TP", from_entry="Long", loss=long_stoploss_percentage, profit=long_takeprofit_percentage, alert_message="Your Long SL/TP Limit As Been Triggered.")
    strategy.close("Long", when=sell_signal, alert_message="Close Long Position")

// Short Strategy
if sell_signal and in_date_range and enable_short_strategy == true
    strategy.entry("Short", false, when = sell_signal, alert_message="Open Short Position")
    strategy.exit("Short SL/TP", from_entry="Short", loss=short_stoploss_percentage, profit=short_takeprofit_percentage, alert_message="Your Short SL/TP Limit As Been Triggered.")
    strategy.close("Short", when=buy_signal, alert_message="Close Short Position")
