//@version=5
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Bunghole 2021
strategy(title='MACD Long Strategy', initial_capital=100000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, pyramiding=0, currency='USD', overlay=true)

//// Stoploss and Take Profit Parameters
// Enable Long Strategy
enable_long_strategy = input.bool(true, title='Enable Long Strategy', group='SL/TP For Long Strategy', inline='1')
long_stoploss_value = input.float(defval=50, title='Stoploss %', minval=0, group='SL/TP For Long Strategy', inline='2')
long_stoploss_percentage = close * (long_stoploss_value / 100) / syminfo.mintick
long_takeprofit_value = input.float(defval=50, title='Take Profit %', minval=0, group='SL/TP For Long Strategy', inline='2')
long_takeprofit_percentage = close * (long_takeprofit_value / 100) / syminfo.mintick

// Enable Short Strategy
enable_short_strategy = input.bool(true, title='Enable Short Strategy', group='SL/TP For Short Strategy', inline='3')
short_stoploss_value = input.float(defval=50, title='Stoploss %', minval=0, group='SL/TP For Short Strategy', inline='4')
short_stoploss_percentage = close * (short_stoploss_value / 100) / syminfo.mintick
short_takeprofit_value = input.float(defval=50, title='Take Profit %', minval=0, group='SL/TP For Short Strategy', inline='4')
short_takeprofit_percentage = close * (short_takeprofit_value / 100) / syminfo.mintick

// Plot Stoploss & Take Profit Levels
long_stoploss_price = strategy.position_avg_price * (1 - long_stoploss_value / 100)
long_takeprofit_price = strategy.position_avg_price * (1 + long_takeprofit_value / 100)
short_stoploss_price = strategy.position_avg_price * (1 + short_stoploss_value / 100)
short_takeprofit_price = strategy.position_avg_price * (1 - short_takeprofit_value / 100)
plot(enable_long_strategy and not enable_short_strategy ? long_stoploss_price : na, color=color.new(#ff0000, 0), style=plot.style_linebr, linewidth=2, title='Long SL Level')
plot(enable_long_strategy and not enable_short_strategy ? long_takeprofit_price : na, color=color.new(#008000, 0), style=plot.style_linebr, linewidth=2, title='Long TP Level')
plot(enable_short_strategy and not enable_long_strategy ? short_stoploss_price : na, color=color.new(#ff0000, 0), style=plot.style_linebr, linewidth=2, title='Short SL Level')
plot(enable_short_strategy and not enable_long_strategy ? short_takeprofit_price : na, color=color.new(#008000, 0), style=plot.style_linebr, linewidth=2, title='Short TP Level')

// Date Range
start_date = input.int(title='Start Date', defval=1, minval=1, maxval=31, group='Date Range', inline='1')
end_date = input.int(title='End Date', defval=1, minval=1, maxval=31, group='Date Range', inline='1')
start_month = input.int(title='Start Month', defval=1, minval=1, maxval=12, group='Date Range', inline='2')
end_month = input.int(title='End Month', defval=1, minval=1, maxval=12, group='Date Range', inline='2')
start_year = input.int(title='Start Year', defval=1804, minval=1800, maxval=3000, group='Date Range', inline='3')
end_year = input.int(title='End Year', defval=2077, minval=1800, maxval=3000, group='Date Range', inline='3')
in_date_range = time >= timestamp(syminfo.timezone, start_year, start_month, start_date, 0, 0) and time < timestamp(syminfo.timezone, end_year, end_month, end_date, 0, 0)


//// Indicator Inputs
// RSI
rsi_over_sold = input.int(defval=30, minval=1, title='Over Sold Level', group='RSI')
rsi_over_bought = input.int(defval=70, minval=1, title='Over Bought Level', group='RSI')
rsi_length = input.int(defval=14, minval=1, title='RSI Length', group='RSI')
rsi = ta.rsi(close, rsi_length)

// MACD
fast_ma = input.int(defval=12, minval=1, title='FastMA Length', group='MACD')
slow_ma = input.int(defval=26, minval=1, title='SlowMA Length', group='MACD')
signal_length = input.int(defval=9, minval=1, title='Signal Length', group='MACD')
[macd_line, signal_line, hist_line] = ta.macd(close, fast_ma, slow_ma, signal_length)

// EMA
a = input.bool(false, title='Enable EMA Length', group='EMA', inline='1')
b = input.bool(false, title='Enable EMA Length', group='EMA', inline='2')
c = input.bool(false, title='Enable EMA Length', group='EMA', inline='3')
d = input.bool(false, title='Enable EMA Length', group='EMA', inline='4')
e = input.bool(false, title='Enable EMA Length', group='EMA', inline='5')
lena = input.int(9, minval=1, title='-', group='EMA', inline='1')
lenb = input.int(21, minval=1, title='-', group='EMA', inline='2')
lenc = input.int(50, minval=1, title='-', group='EMA', inline='3')
lend = input.int(100, minval=1, title='-', group='EMA', inline='4')
lene = input.int(200, minval=1, title='-', group='EMA', inline='5')
outa = ta.ema(close, lena)
outb = ta.ema(close, lenb)
outc = ta.ema(close, lenc)
outd = ta.ema(close, lend)
oute = ta.ema(close, lene)

//EMA Plots
plot(a and outa ? outa : na, title='EMA 1', color=color.new(color.yellow, 0))
plot(b and outb ? outb : na, title='EMA 2', color=color.new(color.teal, 0))
plot(c and outc ? outc : na, title='EMA 3', color=color.new(color.orange, 0))
plot(d and outd ? outd : na, title='EMA 4', color=color.new(color.green, 0), linewidth=2)
plot(e and oute ? oute : na, title='EMA 5', color=color.new(color.blue, 0), linewidth=2)


//// Strategy
// Creating Long and Short Strategy
was_over_sold = ta.barssince(rsi <= rsi_over_sold) <= 10
was_over_bought = ta.barssince(rsi >= rsi_over_bought) <= 10
crossover_bull = ta.crossover(macd_line, signal_line)
crossover_bear = ta.crossunder(macd_line, signal_line)
buy_signal = was_over_sold and crossover_bull
sell_signal = was_over_bought and crossover_bear

// Long Strategy
if buy_signal and in_date_range and enable_long_strategy == true
    strategy.entry('Long', strategy.long, when=buy_signal, alert_message='Open Long Position')
    strategy.exit('Long  SL/TP', from_entry='Long', loss=long_stoploss_percentage, profit=long_takeprofit_percentage, alert_message='Your Long SL/TP Limit As Been Triggered.')
    strategy.close('Long', when=sell_signal, alert_message='Close Long Position')

// Short Strategy
if sell_signal and in_date_range and enable_short_strategy == true
    strategy.entry('Short', strategy.short, when=sell_signal, alert_message='Open Short Position')
    strategy.exit('Short SL/TP', from_entry='Short', loss=short_stoploss_percentage, profit=short_takeprofit_percentage, alert_message='Your Short SL/TP Limit As Been Triggered.')
    strategy.close('Short', when=buy_signal, alert_message='Close Short Position')
