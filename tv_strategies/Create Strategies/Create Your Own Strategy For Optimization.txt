Hello GitHub! In this document I will be showing you how to create your own strategy for optimization in Python. It is actually quite simple. 
I will provide a checklist down below just in case you get lost. 
As well, I will be releasing a future YouTube video how to run script for everyone new to programming. 
Subscribe to my YouTube channel for more information and new releases.

1. The first thing you need to do is copy and paste all of this pinescript code into your new or pre-existing tradingview strategy. It includes everything from stoploss, 
take profit, and date range parameters.

////
strategy(title='MACD Long Strategy', initial_capital=100000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, pyramiding=0, currency='USD', overlay=true)

//// Stoploss and Take Profit Parameters
// Enable Long Strategy
enable_long_strategy = input.bool(true, title='Enable Long Strategy', group='SL/TP For Long Strategy', inline='1')
long_stoploss_value = input.float(defval=50, title='Stoploss %', minval=0, group='SL/TP For Long Strategy', inline='2')
long_stoploss_percentage = close * (long_stoploss_value / 100) / syminfo.mintick
long_takeprofit_value = input.float(defval=50, title='Take Profit %', minval=0, group='SL/TP For Long Strategy', inline='2')
long_takeprofit_percentage = close * (long_takeprofit_value / 100) / syminfo.mintick

// Enable Short Strategy
enable_short_strategy = input.bool(true, title='Enable Short Strategy', group='SL/TP For Short Strategy', inline='3')
short_stoploss_value = input.float(defval=50, title='Stoploss %', minval=0, group='SL/TP For Short Strategy', inline='4')
short_stoploss_percentage = close * (short_stoploss_value / 100) / syminfo.mintick
short_takeprofit_value = input.float(defval=50, title='Take Profit %', minval=0, group='SL/TP For Short Strategy', inline='4')
short_takeprofit_percentage = close * (short_takeprofit_value / 100) / syminfo.mintick

// Plot Stoploss & Take Profit Levels
long_stoploss_price = strategy.position_avg_price * (1 - long_stoploss_value / 100)
long_takeprofit_price = strategy.position_avg_price * (1 + long_takeprofit_value / 100)
short_stoploss_price = strategy.position_avg_price * (1 + short_stoploss_value / 100)
short_takeprofit_price = strategy.position_avg_price * (1 - short_takeprofit_value / 100)
plot(enable_long_strategy and not enable_short_strategy ? long_stoploss_price : na, color=color.new(#ff0000, 0), style=plot.style_linebr, linewidth=2, title='Long SL Level')
plot(enable_long_strategy and not enable_short_strategy ? long_takeprofit_price : na, color=color.new(#008000, 0), style=plot.style_linebr, linewidth=2, title='Long TP Level')
plot(enable_short_strategy and not enable_long_strategy ? short_stoploss_price : na, color=color.new(#ff0000, 0), style=plot.style_linebr, linewidth=2, title='Short SL Level')
plot(enable_short_strategy and not enable_long_strategy ? short_takeprofit_price : na, color=color.new(#008000, 0), style=plot.style_linebr, linewidth=2, title='Short TP Level')

// Date Range
start_date = input.int(title='Start Date', defval=1, minval=1, maxval=31, group='Date Range', inline='1')
end_date = input.int(title='End Date', defval=1, minval=1, maxval=31, group='Date Range', inline='1')
start_month = input.int(title='Start Month', defval=1, minval=1, maxval=12, group='Date Range', inline='2')
end_month = input.int(title='End Month', defval=1, minval=1, maxval=12, group='Date Range', inline='2')
start_year = input.int(title='Start Year', defval=1804, minval=1800, maxval=3000, group='Date Range', inline='3')
end_year = input.int(title='End Year', defval=2077, minval=1800, maxval=3000, group='Date Range', inline='3')
in_date_range = time >= timestamp(syminfo.timezone, start_year, start_month, start_date, 0, 0) and time < timestamp(syminfo.timezone, end_year, end_month, end_date, 0, 0)

////

2. This is where your actual strategy goes. You can input all the indicators you need for your strategy. For example, I will just add the rsi indicator down below.

//RSI
rsi = ta.rsi(close, 14)
rsi_over_sold = rsi < 30
rsi_over_bought = rsi > 70

3. Now that we have our indicator we can focus on the strategy. My buy_signal will be when the rsi is over sold, and my sell_signal will be when the rsi is overbought.

//// Strategy
// Creating Long and Short Strategy
buy_signal = rsi_over_sold
sell_signal = rsi_over_bought

// Long Strategy
if buy_signal and in_date_range and enable_long_strategy == true
    strategy.entry('Long', strategy.long, when=buy_signal, alert_message='Open Long Position')
    strategy.exit('Long  SL/TP', from_entry='Long', loss=long_stoploss_percentage, profit=long_takeprofit_percentage, alert_message='Your Long SL/TP Limit As Been Triggered.')
    strategy.close('Long', when=sell_signal, alert_message='Close Long Position')

// Short Strategy
if sell_signal and in_date_range and enable_short_strategy == true
    strategy.entry('Short', strategy.short, when=sell_signal, alert_message='Open Short Position')
    strategy.exit('Short SL/TP', from_entry='Short', loss=short_stoploss_percentage, profit=short_takeprofit_percentage, alert_message='Your Short SL/TP Limit As Been Triggered.')
    strategy.close('Short', when=buy_signal, alert_message='Close Short Position')
    

4. That's it! Now you have the opportunity to optimize your code when using my Python script. 
I hope I made it simple for you to understand. I will post the complete script I just made down below so you can see how it looks all put together. 
As well, take a look at my other strategies on GitHub if you're still having trouble understanding this.

https://www.tradingview.com/script/ImCFrBhi-Strategy-Template/
